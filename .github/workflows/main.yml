name: Ubuntu CI

on: [push]

jobs:
  main:
    runs-on: self-hosted
    timeout-minutes: 99999999
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.7'
          #cache: 'poetry'
      - run: pip install poetry --user
      - run: $HOME/.local/bin/poetry install

      #- name: Cache weights and datasets
      #  id: cache-weights-datasets
      #  uses: actions/cache@v3
      #  env:
      #    cache-name: cache-weights-datasets
      #  with:
      #    path: .
      #    key: ${{ runner.os }}-build-${{ env.cache-name }}

      # - uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     # use-mamba: true
      #     # python-version: 3.7
      #     # mamba-version: "*"
      #     # channels: conda-forge, defaults
      #     # channel-priority: true
      #     activate-environment: pytorch-yolov3-helloworld
      #     environment-file: conda-environment.yml
      #     # auto-activate-base: false

      # - name: Upgrade pip
      #   run: python3 -m pip install --upgrade pip
      
      #- name: Install Poetry
      #  run: pip install poetry --user
      # pip3 install urllib3 importlib-metadata>=4.4 poetry --user
      # poetry add certifi

      # - name: Install Poetry
      #   uses: abatilo/actions-poetry@v2.0.0
      #   with:
      #     poetry-version: "1.1.11"

      #- name: Install Dependencies
      #  run: poetry install

      #- name: Pin setup tools (remove for next torch release)
      #  run: poetry run pip install setuptools==59.5.0

      # Prints the help pages of all scripts to see if the imports etc. work
      - name: Test the help pages
        run: |
          echo '--> poetry run yolo-train -h'
          $HOME/.local/bin/poetry run yolo-train -h
          echo '--> poetry run yolo-test -h'
          $HOME/.local/bin/poetry run yolo-test -h
          echo '--> poetry run yolo-demo -h'
          $HOME/.local/bin/poetry run yolo-detect -h

      #- if: ${{ steps.cache-weights-datasets.outputs.cache-hit == 'false' }}
      - name: Download weights
        run: /bin/bash ./weights/download_weights.sh
      
      ##- if: ${{ steps.cache-weights-datasets.outputs.cache-hit == 'false' }}
      #- name: Download coco dataset
      #  run: /bin/bash ./data/get_coco_dataset.sh
      #- name: Demo Training
      #  run: $HOME/.local/bin/poetry run yolo-train --n_cpu 8 --epochs 1 --data config/coco.data  --model config/yolov3.cfg --pretrained_weights weights/darknet53.conv.74
      - name: Download VOC2012 dataset
        run: /bin/bash ./data/get_pascal_voc_dataset.sh
      - name: Demo Training
        run: $HOME/.local/bin/poetry run yolo-train --n_cpu 8 --epochs 1 --data config/yolov3-tiny.data --model config/yolov3-tiny.cfg --pretrained_weights weights/yolov3-tiny.weights

      #- name: Demo Evaluate
      #  run: poetry run yolo-test --n_cpu 2 --data config/coco.data  --model config/yolov3.cfg --weights checkpoints/yolov3_ckpt_29.pth

      #- name: Demo Detect
      #  run: poetry run yolo-detect --n_cpu 2 --batch_size 2 --weights checkpoints/yolov3_ckpt_29.pth

  #linter:
  #  runs-on: ubuntu-18.04
  #  steps:
  #    - uses: actions/checkout@v2
  #
  #    - name: Flake8
  #      uses: TrueBrain/actions-flake8@master
  #      with:
  #        only_warn: 1
  #        max_line_length: 150
  #        path: pytorchyolo
